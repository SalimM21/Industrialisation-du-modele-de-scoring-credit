name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # -----------------------------
      # 1. Checkout du code
      # -----------------------------
      - name: Checkout repository
        uses: actions/checkout@v3

      # -----------------------------
      # 2. Setup Python
      # -----------------------------
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # -----------------------------
      # 3. Install dependencies
      # -----------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # -----------------------------
      # 4. Linting (optionnel)
      # -----------------------------
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .

      # -----------------------------
      # 5. Run unit tests
      # -----------------------------
      - name: Run tests with pytest
        run: |
          pip install pytest
          pytest -v

  docker_build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t credit-scoring-api:latest .

      - name: Test Docker container
        run: |
          docker run --rm -d -p 8000:8000 --name test_container credit-scoring-api:latest
          sleep 10
          curl -f http://localhost:8000/docs || exit 1
          docker stop test_container

  deploy:
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # -----------------------------
      # DÃ©ploiement (exemple sur serveur via SSH)
      # -----------------------------
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/credit_scoring
            docker pull credit-scoring-api:latest
            docker stop credit_scoring || true
            docker rm credit_scoring || true
            docker run -d --name credit_scoring -p 8000:8000 credit-scoring-api:latest
